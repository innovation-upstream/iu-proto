stages:
  - generate
  - publish

workflow:
  rules:
    - if: '($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event") && ($CI_COMMIT_BRANCH == "main" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main")'
      when: always
    - if: '$FORCE_PIPELINE == "true"'
      when: always
    - when: never

# TODO: check breaking

buf_generate:
  stage: generate
  image:
    name: nixos/nix
  before_script:
    - cat $NETRC > $HOME/.netrc
    - nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
    - nix-channel --update
  script:
    - nix-shell --command 'buf generate'
  artifacts:
    paths:
      - pb
    expire_in: 1 day

publish_genproto_github:
  stage: publish
  image:
    name: node:17-buster-slim
  variables:
    # Skip host key verification prompt
    GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
    GIT_AUTHOR_NAME: "Innovation Upstream CI Bot"
    GIT_AUTHOR_EMAIL: "zach+ci@innovationupstream.com"
    GIT_COMMITTER_NAME: "Innovation Upstream CI Bot"
    GIT_COMMITTER_EMAIL: "zach+ci@innovationupstream.com"
  before_script:
    - apt update
    - apt install -y ssh git golang-go curl
    - curl -OL https://golang.org/dl/go1.17.3.linux-amd64.tar.gz
    - rm -rf /usr/local/go && tar -C /usr/local -xzf go1.17.3.linux-amd64.tar.gz
    - export PATH=$PATH:/usr/local/go/bin
    - npm i -g @bazel/bazelisk
    - \[ -d ~/.ssh \] || mkdir ~/.ssh
    - |-
      cat <<EOT >> ~/.ssh/config
      Host github.com-innovation-upstream-iu-proto
        Hostname github.com
        IdentityFile=$GITHUB_IU_PROTO_DEPLOY_SSH_KEY_PRIVATE
      EOT
    - chmod 0600 $GITHUB_IU_PROTO_DEPLOY_SSH_KEY_PRIVATE
  script:
    - cd downstream
    - git clone -b main --single-branch git@github.com-innovation-upstream-iu-proto:innovation-upstream/go-genproto.git go-genproto
    - cp -a $CI_PROJECT_DIR/pb/go.innovationupstream.dev/genproto/* $CI_PROJECT_DIR/downstream/go-genproto
    - cd go-genproto
    - go mod tidy
    - bazel run --define ENVIRONMENT=ci //:gazelle
    - git add .
    - git commit -m "$CI_COMMIT_MESSAGE" ; exit 0
    - git push -u origin main
  needs:
    - buf_generate
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always

publish_bsr:
  stage: publish
  image:
    name: bufbuild/buf
    entrypoint: [""]
  variables:
    BUF_TOKEN: $BSR_API_TOKEN
  script:
    - buf push
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'
    when: always

